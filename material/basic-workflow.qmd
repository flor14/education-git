---
title: "1.2 - Basic workflow"
description: | 
              - Implement Git’s clone, add, status, commit, pull, and push operations on the command line.
              - Understand what implies using the staging area in a Git workflow.
date: "01/27/2023"
image: img/arrows.jpg
categories:
  - git clone
  - git add
  - git status
  - git commit
  - git pull
  - git push
  - git log
  - git fetch
bibliography: references.bib
---


## Why to teach this?

**Implement Git’s clone, add, status, commit, pull, and push operations on the command line.**
-  Understand what the commands are doing in relation with the different elements involved (ie. what is the `staging area`, the `index`, the `repository` and the `working directory`?) is not trivial and should actively involve part of the classes activities. Building a basic but functional initial representation of Git system could be the major learning goal of any Git course teaching the basic workflow.

**Understand what implies using the staging area in a Git workflow**
- .

## Connection to other relevant topics hat should be mentioned /explained

#### Git related

- **The staging area and the local repository**
- These two compartments should be introduce to finish figuring out a mental model.
  [This lesson](https://coderefinery.github.io/git-intro/staging-area/) of code refinery focus on the staging area, teaching a lot of commands related to it. It would be a nice exercise to go through this after the students finished learning the initial Git commands.

- **Best practices**
  - How often to commit, pull and push. 
  - [How to write good commit messages](https://coderefinery.github.io/git-intro/basics/#writing-useful-commit-messages).
  

- **.gitignore**
Once we teach that there is a remote repository and that we can push there, it is possible to introduce `.gitignore`.
Material: 



## Mental Model 

![](img/mm-basic-workflow.png){width=500 fig-align="center"}


## Activities 

- The Carpentries - [Version Control with Git - Tracking Changes](https://swcarpentry.github.io/git-novice/04-changes/index.html)
- Data Science 100 @timbers2022data
- Code Refinery - [Exercises - Record changes](https://coderefinery.github.io/git-intro/basics/#exercise-record-changes)
- Git Kata -  [Git Kata: Basic Commits](https://github.com/eficode-academy/git-katas/blob/master/basic-commits/README.md)
- Git Kata -  [Git Kata: Basic Staging](https://github.com/eficode-academy/git-katas/blob/master/basic-commits/README.md)
- Learn enough Git to Be Dangerous - Michale Harti [Our first commit - exercises](https://www.learnenough.com/git-tutorial#sec-exercises_our_first_commit)
- Learn enough Git to Be Dangerous - Michale Harti [Adding a tag -  `git log` exercise](https://www.learnenough.com/git-tutorial#sec-exercises_adding_a_tag)
- https://github.com/UOL-CS/gitruler-b-1

# References {.unnumbered}

::: {#refs}

:::
