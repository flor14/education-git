---
title: "Visualization and project History"
description: "Post description"
author: "Florencia D'Andrea"
date: "5/22/2021"
categories:
  - git log
  - git diff
  - git show
  - HEAD
---


when this commands are making grow or deleting the project history.

-   Teaching the complexity of the tools a big shout out about how to represent the git history

from an abstract representation to a concrete one

PASTE HERE DIFFERENT WAYS TO REPRESENT THIS

What it is not said is that there are ways more complex commands

are translated into the way the branches are represented and this is sometimes

-   git show, git log, git diff... can you recreate the tree?

What information is in the visualization of a tree and how to get the one that we couldn't see.

When this information is important.

-   revert and reset nightmare

In what situations experience programmers check the history of a project

when this commands are making grow or deleting the project history.

this is a good link to this in my eyes, because

they are commands than alters the project history so they are

suitable to be taught together. For example,

you can ask your student to try git reset, git revert

and then check what happens with the visualization of the

project history.

It is more important to put the students in the situation

they should want to be in this position. For example,

as we can read it here in this Stack Overflow question

an example of someone that wanted to use this commands.

Creating an activity based in this

\-\--

**Not a misconception but mostly a pitfall to avoid**

Multiple commands... but what they do?

It doesn't matter how useful do you think a list of commands it is for the students,

they should be exposed to a situation.

\-\--
